package com.editor.engine.abstracts{	import away3d.containers.View3D;		import com.editor.engine.interfaces.IAssetContainer;	import com.editor.engine.interfaces.IBuilder;	import com.editor.engine.interfaces.ISceneContainer;	import com.editor.engine.vo.SceneCameraVO;	import com.editor.engine.vo.SceneGeometryVO;	import com.editor.engine.vo.SceneSectionVO;		import flash.display.BitmapData;	import flash.display.DisplayObject;	import flash.events.EventDispatcher;				public class AbstractBuilder extends EventDispatcher implements IBuilder , IAssetContainer , ISceneContainer	{		public function AbstractBuilder ( )		{		}								////////////////////////////////////////////////////////////////////////////////		//		// Public Methods		//		////////////////////////////////////////////////////////////////////////////////								public function build ( view : View3D , sections : Array ) : void		{		}								public function addBitmapDataAsset ( id : String , data : BitmapData ) : void		{		}								public function addDisplayObjectAsset ( id : String , data : DisplayObject ) : void		{		}								public function addColladaAsset ( id : String , data : XML ) : void		{		}								public function getSectionById ( id : String ) : SceneSectionVO		{			var vo : SceneSectionVO = new SceneSectionVO ( ) ;						vo.id = id ;			return vo ;		}						public function getCameraById ( id : String ) : SceneCameraVO		{			var vo : SceneCameraVO = new SceneCameraVO ( ) ;						vo.id = id ;			return vo ;		}								public function getGeometryById ( id : String ) : SceneGeometryVO		{			var vo : SceneGeometryVO = new SceneGeometryVO ( ) ;						vo.id = id ;			return vo ;		}								public function getCameras ( ) : Array		{			return new Array ( ) ;		}								public function getGeometry ( ) : Array		{			return new Array ( ) ;		}								public function getSections ( ) : Array		{			return new Array ( ) ;		}	}}